- hosts: jumpbox
  gather_facts: true
  vars:
    - dead_or_alive: present
  roles:
    - { role: osp_infra, when: dead_or_alive == 'present' }

- hosts: jumpbox
  gather_facts: false
  vars:
    dead_or_alive: present
    the3tier_info:
        - { name: 'app1', group: 'apps' }
        - { name: 'app2', group: 'apps' }
        - { name: 'frontend1', group: 'frontends' }
        - { name: 'appdb1', group: 'appdbs'}
    cloud_name: ospcloud
    flavor_name: m2.small
    deployment: dev
    image_name: rhel-guest
    sec_group: ICMP_and_SSH
    net_int: int_network
    net_ext: ext_network
    key_name: ansible_ssh
  tasks:
  - name: Create a server instance
    os_server:
      cloud: "{{ cloud_name }}"
      name: "{{ item.name }}"
      state: "{{ dead_or_alive }}"
      image: "{{ image_name }}"
      meta: "group={{ item.group }},deployment_name={{ deployment }}"
      flavor: "{{ flavor_name }}"
      security_groups: "{{ sec_group }}"
      key_name: "{{ key_name }}"
      nics:
      - net-name: "{{ net_int }}"
      userdata: |
        #!/bin/bash
        curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
        cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
        curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
        cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
    with_items: "{{ the3tier_info }}"

  - name: Add floating IP to webserver
    os_floating_ip:
      cloud: "{{ cloud_name }}"
      state: present
      reuse: yes
      server: "{{ item.name }}"
      network: "{{ net_ext }}"
      wait: true
      timeout: 180
    register: server_info
    with_items: "{{ the3tier_info }}"
    when: "dead_or_alive == 'present'"
